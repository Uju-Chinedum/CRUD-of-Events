openapi: 3.0.0
info:
  title: CRUD-of-Events
  version: 1.0.0
servers:
  - url: https://crud-of-events.onrender.com/api/v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: User
  - name: Event
paths:
  /events:
    post:
      tags:
        - Event
      summary: Create Event
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                dayOfWeek:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /events/day/{dayOfWeek}:
    parameters:
      - name: dayOfWeek
        in: path
        required: false   # Make dayOfWeek optional
        schema:
          type: string
        description: The day of the week (e.g., "sunday")
    get:
      tags:
        - Event
      summary: Get All Events for a Day of Week
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Event
      summary: Delete Event From Day of Week
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /events/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: The ID of the event
    get:
      tags:
        - Event
      summary: Get Event by ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Event
      summary: Delete Event by ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/sign-up:
    post:
      tags:
        - User
      summary: Create User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                city:
                  type: string
                country:
                  type: string
                email:
                  type: string
                password:
                  type: string
                confirmPassword:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/sign-in:
    post:
      tags:
        - User
      summary: Login User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
